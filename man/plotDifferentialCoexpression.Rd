% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotDifferentialCoexpression.R
\name{plotDifferentialCoexpression}
\alias{plotDifferentialCoexpression}
\title{Given a table of differentially coexpressed genes, the expression matrices
that were used to generate the table of differentially coexpressed genes, and
two coexpressed genes, plot the expression level of each gene across cells
under each condition as a scatter plot. The x-axis is expression of one gene
and the y-axis is expression of the other gene. Each point represents the
expression level of one gene in one cell under one condition vs. the
expression level of a coexpressed gene in another cell under another
condition. Genes that are highly coexpressed will have points close to the
diagonal. Genes that are differentially coexpressed will have different
patterns of scatter across the two different conditions.}
\usage{
plotDifferentialCoexpression(
  diffCoexpTable,
  expressionMatrixA,
  expressionMatrixB,
  gene1,
  gene2,
  conditionA = NULL,
  conditionB = NULL
)
}
\arguments{
\item{diffCoexpTable}{A dataframe containing pairs of genes and their
correlations in two networks: networkA and networkB. Also contains
the log2FC}

\item{expressionMatrixA}{The expression matrix that was used to create
networkA}

\item{expressionMatrixB}{The expression matrix that was used to create
networkB}

\item{gene1}{A gene name}

\item{gene2}{Another gene name. Gene1 and Gene2 should be coexpressed.}

\item{conditionA}{an optional parameter to specify the condition/cell type
that corresponds to expressionMatrixA}

\item{conditionB}{an optional parameter to specify the condition/cell type
that corresponds to expressionMatrixB

Note: this function assumes that the parameters are passed in the correct
order. That is, expressionMatrixA was used to generate the correlation
values stored in diffCoexpTable$CorrelationA, and expressionMatrixB was
used to generate the correlation values stored in
diffCoexpTable$CorrelationB. Running the function in the incorrect order
most likely will not throw errors, but the results will not be meaningful.}
}
\value{
a scatter plot of expression level of gene1 vs. expression level of
gene 2 under two different conditions
}
\description{
Given a table of differentially coexpressed genes, the expression matrices
that were used to generate the table of differentially coexpressed genes, and
two coexpressed genes, plot the expression level of each gene across cells
under each condition as a scatter plot. The x-axis is expression of one gene
and the y-axis is expression of the other gene. Each point represents the
expression level of one gene in one cell under one condition vs. the
expression level of a coexpressed gene in another cell under another
condition. Genes that are highly coexpressed will have points close to the
diagonal. Genes that are differentially coexpressed will have different
patterns of scatter across the two different conditions.
}
\examples{
# Using an example data that was generated using the pbmc data that is
# available in this package. 

# Condition A: Platelet cells
exprMatrixPlateletPath <- system.file("extdata", 
                                      "expressionMatrixPlatelet.csv", 
                                      package = "DiffCoExpr")
exprMatrixPlatelet <- read.csv(exprMatrixPlateletPath)
# Set the row names and remove the column containing gene names
rownames(exprMatrixPlatelet) <- exprMatrixPlatelet[, 1]
exprMatrixPlatelet <- exprMatrixPlatelet[, -1]

coexprNetPlateletPath <- system.file("extdata", 
                                     "coexpressionNetworkPlatelet.csv", 
                                     package = "DiffCoExpr")
coexprNetPlatelet <- read.csv(coexprNetPlateletPath)
# Delete the first column 
coexprNetPlatelet <- coexprNetPlatelet[, -1]

# Condition B: DC Cells
exprMatrixDCPath <- system.file("extdata", 
                                "expressionMatrixDC.csv", 
                                package = "DiffCoExpr")
exprMatrixDC <- read.csv(exprMatrixDCPath)
# Set the row names and remove the column containing gene names
rownames(exprMatrixDC) <- exprMatrixDC[, 1]
exprMatrixDC <- exprMatrixDC[, -1]

coexprNetDCPath <- system.file("extdata", 
                               "coexpressionNetworkDC.csv", 
                               package = "DiffCoExpr")
coexprNetDC <- read.csv(coexprNetDCPath)
# Delete the first column 
coexprNetDC <- coexprNetDC[, -1]

diffCoexpTable <- getDifferentialCoexpression(networkA = coexprNetPlatelet, 
                                              networkB = coexprNetDC)

gene1 <- 'ADH5'
gene2 <- 'C4orf3'

plot <- plotDifferentialCoexpression(diffCoexpTable = diffCoexpTable,
                                     expressionMatrixA = exprMatrixPlatelet,
                                     expressionMatrixB = exprMatrixDC, 
                                     gene1 = gene1, 
                                     gene2 = gene2,
                                     conditionA = "platelets", 
                                     conditionB = "DC")
plot

}
